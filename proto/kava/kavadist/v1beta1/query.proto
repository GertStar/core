syntax = "proto3";
package gert.gertdist.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gert/gertdist/v1beta1/params.proto";

option go_package = "github.com/Gert-Chain/core/x/gertdist/types";

// Query defines the gRPC querier service.
service Query {
  // Params queries the parameters of x/gertdist module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gert/gertdist/v1beta1/parameters";
  }

  // Balance queries the balance of all coins of x/gertdist module.
  rpc Balance(QueryBalanceRequest) returns (QueryBalanceResponse) {
    option (google.api.http).get = "/gert/gertdist/v1beta1/balance";
  }
}

// QueryParamsRequest defines the request type for querying x/gertdist parameters.
message QueryParamsRequest {}

// QueryParamsResponse defines the response type for querying x/gertdist parameters.
message QueryParamsResponse {
  Params params = 1 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"params\""];
}

// QueryBalanceRequest defines the request type for querying x/gertdist balance.
message QueryBalanceRequest {}

// QueryBalanceResponse defines the response type for querying x/gertdist balance.
message QueryBalanceResponse {
  repeated cosmos.base.v1beta1.Coin coins = 1 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"coins\""
  ];
}
